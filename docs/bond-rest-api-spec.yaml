openapi: 3.0.1
info:
  version: 0.1.0
  title: Sawtooth Bond REST API
  description: >
    An API providing HTTP/JSON interface to the Sawtooth Bond blockchain
    application
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    AuthorizationModel:
      description: >-
        Mapping of a participant's public key to their role within an
        organization
      type: object
      properties:
        public_key:
          description: Public key of an authorized user
          type: string
        role:
          $ref: '#/components/schemas/RoleEnum'
    BondModel:
      description: A bond model
      properties:
        bond_id:
          description: ISIN of the bond
          type: string
        issuing_organization_id:
          description: ID of the organization that issued the bond
          type: string
        corporate_debt_ratings:
          type: array
          items:
            $ref: '#/components/schemas/CorporateDebtRatingModel'
        coupon_rate:
          description: >-
            The yearly rate of interest paid in coupons (thousandths of
            percents)
          type: number
          format: uint64
        coupon_type:
          $ref: '#/components/schemas/CouponTypeEnum'
        coupon_frequency:
          $ref: '#/components/schemas/CouponFrequencyEnum'
        first_coupon_date:
          description: Date the first coupon can be paid for the bond (Unix UTC Timestamp)
          type: number
          format: uint64
        maturity_date:
          description: >-
            Date on which the bond becomes worth itâ€™s face value and can be
            redeemed (Unix UTC Timestamp)
          type: number
          format: uint64
        amount_outstanding:
          description: Quantity of bonds
          type: number
          format: uint64
        face_value:
          description: >-
            Par-value of the bond, to be paid upon maturity (Millionths of
            dollars)
          type: number
          format: uint64
        first_settlement_date:
          description: Date on which the bond was first settled (Unix UTC Timestamp)
          type: number
          format: uint64
    CorporateDebtRatingModel:
      description: Bond rating by agency
      type: object
      properties:
        agency:
          type: string
        rating:
          type: string
    ErrorModel:
      description: An error object
      type: object
      properties:
        error:
          properties:
            status:
              description: HTTP status code
              type: integer
            message:
              description: A message describing the error that occurred
              type: string
    HeadModel:
      description: Current block ID
      type: string
    HoldingModel:
      description: Assets that an organization owns
      type: object
      properties:
        asset_type:
          $ref: '#/components/schemas/AssetTypeEnum'
        asset_id:
          description: 'The bond_id for a bond holding, or ''USD'' for a currency holding'
          type: string
        amount:
          description: >-
            Current balance of a holding (quantity of bonds or millionths of
            dollars)
          type: number
          format: uint64
    LinkModel:
      description: A link to the resource/resources at the current block ID
      type: string
    OrderModel:
      description: An order model
      type: object
      properties:
        order_id:
          description: Unique ID of an order
          type: string
        action:
          $ref: '#/components/schemas/OrderActionEnum'
        order_type:
          $ref: '#/components/schemas/OrderTypeEnum'
        ordering_organization_id:
          description: ID of the organization that the order was created for
          type: string
        bond_id:
          description: ISIN of the bond that the order is for
          type: string
        limit_price:
          description: >-
            The maximum price the ordering firm is willing to pay for a bond or
            the minimum price they are willing to sell, depending on order_type
          type: number
          format: uint64
        limit_yield:
          description: >-
            The minimum yield at which the ordering firm is willing to buy a
            bond or the maximum yield at which they are willing to sell
          type: number
          format: uint64
        quantity:
          description: >-
            The quantity the firm wishes to buy or sell in USD as a multiple of
            the bond's par value
          type: number
          format: uint64
        quote_id:
          description: Quote which is matched to this order
          type: string
        status:
          description: 'Whether the order is settled, open, or matched'
          type: string
          enum:
            - OPEN
            - SETTLED
            - MATCHED
        timestamp:
          description: Time that the order was created (UTC Timestamp)
          type: number
          format: uint64
    OrganizationModel:
      description: An organization model
      type: object
      properties:
        organization_id:
          description: Ticker symbol or pricing source ID of an organization
          type: string
        name:
          description: Name of an organization
          type: string
        organization_type:
          $ref: '#/components/schemas/OrganizationTypeEnum'
        industry:
          description: Industry of operation for an organization
        holdings:
          type: array
          items:
            $ref: '#/components/schemas/HoldingModel'
        authorizations:
          type: array
          items:
            $ref: '#/components/schemas/AuthorizationModel'
        receipts:
          type: array
          items:
            $ref: '#/components/schemas/ReceiptModel'
    ParticipantModel:
      description: A participant model
      properties:
        public_key:
          description: Participant's public key
          type: string
        username:
          description: Participant's username
          type: string
        organization_id:
          description: ID of the organization the participant is associated with
          type: string
    QuoteModel:
      description: quote
      properties:
        quote_id:
          description: Unique ID of the quote
          type: string
        organization_id:
          description: Organization that the quote is on behalf of
          type: string
        bond_id:
          description: ID of the bond the quote is for
          type: string
        ask_price:
          description: >-
            Minimum price for which the firm is willing to sell the bond
            (millionths of dollars)
          type: number
          format: uint64
        ask_qty:
          description: Maximum quantity the firm is willing to sell
          type: number
          format: uint64
        bid_price:
          description: >-
            Maximum price for which the firm is willing to buy the bond
            (millionths of dollars)
          type: number
          format: uint64
        bid_qty:
          description: Minimum quantity the firm is willing to buy
          type: number
          format: uint64
        status:
          description: Status of the quote
          type: string
          enum:
            - OPEN
            - CLOSED
        timestamp:
          description: >-
            Time that the quote is created in relation to the current clock
            (Unix UTC Timestamp)
          type: number
          format: uint64
    ReceiptModel:
      description: Record of coupon or redemption payment
      type: object
      properties:
        bond_id:
          description: The ISIN of the bond for which a payment was received
          type: string
        payment_type:
          type: string
          enum:
            - COUPON
            - REDEMPTION
        coupon_date:
          description: Date on which the coupon became due (Unix UTC Timestamp)
          type: number
          format: uint64
        amount:
          description: Amount received (millionths of dollars)
          type: number
          format: uint64
        timestamp:
          description: Timestamp on which the payment occurred (Unix UTC Timestamp)
          type: number
          format: uint64
    SettlementModel:
      description: Model for the settlement resource
      type: object
      properties:
        order_id:
          description: ID of the order which is being settled
          type: string
        ordering_organization_id:
          description: ID of the organization on whose behalf the order was entered
        quoting_organization_id:
          description: ID the organization that supplied the quote matched with the order
        action:
          $ref: '#/components/schemas/OrderActionEnum'
        bond_quantity:
          description: Quantity of bonds that are transferred
          type: number
          format: uint64
        currency_amount:
          description: Amount of cash that is transferred (millionths of dollars)
          type: number
          format: uint64
    AssetTypeEnum:
      description: Whether a holding is tracking currency or a bond
      type: string
      enum:
        - CURRENCY
        - BOND
    CouponFrequencyEnum:
      description: How often coupons are paid out
      type: string
      enum:
        - QUARTERLY
        - MONTHLY
        - DAILY
    CouponTypeEnum:
      description: Coupon type of a bond
      type: string
      enum:
        - FIXED
        - FLOATING
    OrganizationTypeEnum:
      description: Type of an organization
      type: string
      enum:
        - TRADING_FIRM
        - PRICING_SOURCE
    RoleEnum:
      description: Role of a participant within an organization
      type: string
      enum:
        - MARKETMAKER
        - TRADER
    OrderActionEnum:
      description: Action of order
      type: string
      enum:
        - BUY
        - SELL
    OrderTypeEnum:
      description: Type of order
      type: string
      enum:
        - MARKET
        - LIMIT
    Batch:
      properties:
        header:
          $ref: '#/components/schemas/BatchHeader'
        header_signature:
          type: string
          example: >-
            89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
    BatchHeader:
      properties:
        signer_public_key:
          type: string
          example: 038bba5708acc262464c9fe30d3de9e905a9a5fa30cedd151dd9cd09ea26d46d00
        transaction_ids:
          type: array
          items:
            type: string
            example: >-
              540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
    BatchList:
      properties:
        batches:
          type: array
          items:
            $ref: '#/components/schemas/Batch'
    BatchStatuses:
      type: array
      items:
        properties:
          id:
            type: string
          status:
            type: string
            enum:
              - COMMITTED
              - INVALID
              - PENDING
              - UNKNOWN
          invalid_transactions:
            type: array
            items:
              properties:
                id:
                  type: string
                  example: >-
                    540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
                message:
                  type: string
                extended_data:
                  type: string
                  format: byte
  responses:
    SuccessResponse:
      description: Success response
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  message:
                    type: string
                    example: Batches submitted
    ServerError:
      description: Error response for an unexpected server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
          example:
            status: 500
            message: An unexpected error has occurred
    BadRequestError:
      description: Error response for a bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
          example:
            error:
              status: 400
              message: Bad request
    UnauthorizedError:
      description: Error response for an unauthorized request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
          example:
            error:
              status: 401
              message: Unauthorized
    NotFoundError:
      description: Error response for a not found error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorModel'
          example:
            error:
              status: 404
              message: Resource does not exist
  parameters:
    head:
      name: head
      description: The ID of the block to use as the chain head
      in: query
      schema:
        type: string
        default: latest
      example: >-
        65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
    start:
      name: start
      description: The index of the resource to start a page with
      in: query
      schema:
        type: number
        default: 0
    limit:
      name: limit
      description: The maximum number of resources to return per page
      in: query
      schema:
        type: number
        default: 100
paths:
  /signup:
    post:
      description: Creates a new entry in the key escrow database for a participant
      requestBody:
        content:
          application/json:
           schema:
            properties:
              username:
                description: Username of a registered participant
              hashed_password:
                description: >-
                  Hashed password to be used for participant authentication. This password should be hashed by the client, which will be hashed again before storing in the database.
              encrypted_private_key:
                description: >-
                  The participant's encrypted private key. This private key should be generated by the client, encrypted using the participant's raw password, and encoded as a hex string.
            required:
              - username
              - hashed_password
              - encrypted_private_key
            example:
              username: user1
              hashed_password: 243262243132243046536949706b5272644c71336c7254563679727565494b376d4b3554696b734662685962652f6a52562e437a70462f6552484b4b
              encrypted_private_key: 65794a68624763694f694a49557a49314e694973496d5634634349364d5455794f4463304d6a41344d43776961574630496a6f784e5449344e7a4d344e44677766512e65794a7764574a7361574e6661325635496a6f694d444a6d4d7a49304d4755775a4467334e324930596d4d334d6a67784d4745794e7a41344e7a4133596d4933596d51354f546b795a5468685a4467774e47526c4d5451774d7a4a6d4e6d4933597a63794e6d5a69597a5931496e302e6c65415a6c6175542d7178742d346c64682d6d3145755a7465596b425845456173557142417353795f5a4d
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: Participant created
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  /login:
    post:
      description: Authenticates a participant and returns an encrypted private key
      requestBody:
        content:
          application/json:
            schema:
              properties:
                username:
                  description: Username of a registered participant
                hashed_password:
                  description: Hashed password of a registered participant
              required:
                - username
                - password
              example:
                username: user1
                hashed_password: >-
                  243262243132243046536949706b5272644c71336c7254563679727565494b376d4b3554696b734662685962652f6a52562e437a70462f6552484b4b
      responses:
        '200':
          description: Success response with an encrypted private key
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    properties:
                      token:
                        description: An encrypted private key which can be decrypted by the client using the participant's password to sign transactions
                        type: string
              example:
                data:
                  encrypted_private_key: >-
                    eyJhbGciOiJIUzI1NiIsImV4cCI6MTUyODc0MjA4MCwiaWF0IjoxNTI4NzM4NDgwfQ.eyJwdWJsaWNfa2V5IjoiMDJmMzI0MGUwZDg3N2I0YmM3MjgxMGEyNzA4NzA3YmI3YmQ5OTkyZThhZDgwNGRlMTQwMzJmNmI3YzcyNmZiYzY1In0.leAZlauT-qxt-4ldh-m1EuZteYkBXEEasUqBAsSy_ZM
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          description: Error response to a failed login attempt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
              example:
                status: 401
                message: Username or password was incorrect
        '500':
          $ref: '#/components/responses/ServerError'
  /batches:
    post:
      description: |
        Accepts a protobuf formatted `BatchList` as an octet-stream binary
        file and submits it to the validator to be committed.
      requestBody:
        content:
          application/octet-stream:
            schema:
              $ref: '#/components/schemas/BatchList'
      responses:
        '200':
          $ref: '#/components/responses/SuccessResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  /batch_statuses:
     get:
      description: |
        Fetches an array of objects with a status and id for each batch
        requested. There are four possible statuses with string values
        `'COMMITTED'`, `'INVALID'`, `'PENDING'`, and `'UNKNOWN'`.

        The batch(es) you want to check can be specified using the `id` filter
        parameter. If a `wait` time is specified in the URL, the API will wait
        to respond until all batches are committed, or the time in seconds has
        elapsed. If the value of `wait` is not set (i.e., `?wait&id=...`), or
        it is set to any non-integer value other than `false`, the wait time
        will be just under the API's specified timeout (usually 300).

        Note that because this route does not return full resources, the
        response will not be paginated, and there will be no `head` or
        `paging` properties.
      parameters:
        - name: id
          description: A comma-separated list of batch ids
          in: query
          required: true
          schema:
            type: string
        - name: wait
          in: query
          schema:
            type: integer
            description: A time in seconds to wait for commit
      responses:
        '200':
          description: Success response with requested batch statuses
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BatchStatuses'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - id: 89807bfc9089e37e00d87d97357de14cfbc455cd608438d426a625a30a0da9a31c406983803c4aa27e1f32a3ff61709e8ec4b56abbc553d7d330635b5d27029c
                    status: INVALID
                    invalid_transactions:
                      - id: 540a6803971d1880ec73a96cb97815a95d374cbad5d865925e5aa0432fcf1931539afe10310c122c5eaae15df61236079abbf4f258889359c4d175516934484a
                      - message: No organization with that ID exists
                      - extended_data: ZXJyb3IgZGF0YQ==
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
  /bonds:
    get:
      description: Returns all bonds
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Success response with array of bonds
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/BondModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - bond_id: US00206RDA77
                    issuing_organization_id: T
                    corporate_debt_ratings:
                      - Fitch: BBB
                      - Moodys: Ba3
                      - S&P: BBB-
                    coupon_rate: 15
                    coupon_type: Floating
                    coupon_frequency: Quarterly
                    first_coupon_date: 1333170000
                    maturity_date: 1641880800
                    first_settlement_date: 1325397600
                    amount_outstanding: 2250000000
                    face_value: 1000000000
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/bonds?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  '/bonds/{bond_id}':
    get:
      description: Returns the bond with specified ID
      parameters:
        - in: path
          name: bond_id
          schema:
            type: string
          required: true
          description: ISIN of the bond
          example: US00206RDA77
        - $ref: '#/components/parameters/head'
      responses:
        '200':
          description: Success response with requested bond
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/BondModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  bond_id: US00206RDA77
                  issuing_organization_id: T
                  corporate_debt_ratings:
                    - Fitch: BBB
                    - Moodys: Ba3
                    - S&P: BBB-
                  coupon_rate: 15
                  coupon_type: Floating
                  coupon_frequency: Quarterly
                  first_coupon_date: 1333170000
                  maturity_date: 1641880800
                  first_settlement_date: 1325397600
                  amount_outstanding: 2250000000
                  face_value: 1000000000
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/bonds/US00206RDA77?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
  /organizations:
    get:
      description: Returns all organizations
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Success response with array of organizations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrganizationModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - organization_id: AVCD
                    name: Bank of Terra Incognita
                    organization_type: Pricing Source
                    industry: banking
                    holdings:
                      - asset_type: Currency
                        asset_id: USD
                        amount: 100000000000
                    authorizations:
                      - public_key: >-
                          02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
                        role: MARKETMAKER
                    receipts:
                      - bond_id: US00206RDA77
                        payment_type: COUPON
                        coupon_date: 1333170000
                        amount: 15000000
                        timestamp: 1333170042
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  '/organizations/{organization_id}':
    parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        required: true
        description: ISIN of an organization
        example: AVCD
    get:
      description: Returns the organization with specified ID
      parameters:
        - $ref: '#/components/parameters/head'
      responses:
        '200':
          description: Success response with requested organization
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrganizationModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
                example:
                  data:
                    organization_id: AVCD
                    name: Bank of Terra Incognita
                    organization_type: Pricing Source
                    industry: banking
                    holdings:
                      - asset_type: Currency
                        asset_id: USD
                        amount: 100000000000
                    authorizations:
                      - public_key: >-
                          02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
                        role: MARKETMAKER
                    receipts:
                      - bond_id: US00206RDA77
                        payment_type: COUPON
                        coupon_date: 1333170000
                        amount: 15000000
                        timestamp: 1333170042
                  head: >-
                    65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                  link: >-
                    https://bond-rest-api/organizations/AVCD?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
  '/organizations/{organization_id}/auth':
    parameters:
      - in: path
        name: organization_id
        schema:
          type: string
        required: true
        description: ISIN of an organization
        example: AVCD
  /participants:
    get:
      description: Returns all participants
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Success response with array of participants
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/ParticipantModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - public_key: >-
                      02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
                    username: user1
                    organization_id: T
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/participants?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  '/participants/{public_key}':
    parameters:
      - in: path
        name: public_key
        schema:
          type: string
        required: true
        description: Public key of the participant
        example: 02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
    get:
      description: Returns the participant with specified public key
      parameters:
        - $ref: '#/components/parameters/head'
      responses:
        '200':
          description: Success response with requested participant
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/ParticipantModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  public_key: >-
                    02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a
                  username: user1
                  organization_id: T
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/participants/02178c1bcdb25407394348f1ff5273adae287d8ea328184546837957e71c7de57a?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
  /quotes:
    get:
      description: Returns all quotes
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Success response with array of quotes
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/QuoteModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - quote_id: >-
                      quo2000000000000000000000000000000000000555332323136304b41463231
                    bond_id: US00206RDA77
                    ask_price: 1000000000
                    ask_qty: 10000
                    bid_price: 2000000000
                    bid_qty: 10000
                    status: OPEN
                    timestamp: 1333170042
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/quotes?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  '/quotes/{quote_id}':
    parameters:
      - in: path
        name: quote_id
        schema:
          type: string
        required: true
        description: ID of the quote
        example: quo2000000000000000000000000000000000000555332323136304b41463231
    get:
      description: Returns the quote with specified ID
      parameters:
        - $ref: '#/components/parameters/head'
      responses:
        '200':
          description: Success response with requested quote
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/QuoteModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  quote_id: >-
                    quo2000000000000000000000000000000000000555332323136304b41463231
                  bond_id: US00206RDA77
                  ask_price: 1000000000
                  ask_qty: 10000
                  bid_price: 2000000000
                  bid_qty: 10000
                  status: OPEN
                  timestamp: 1333170042
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/quotes/quo2000000000000000000000000000000000000555332323136304b41463231?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '404':
          $ref: '#/components/responses/NotFoundError'
        '500':
          $ref: '#/components/responses/ServerError'
  /orders:
    get:
      description: Returns all orders
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
      responses:
        '200':
          description: Success response with array of orders
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - order_id: >-
                      odr1000000000000000000000000000000000000555332323136304b41463231
                    action: BUY
                    order: LIMIT
                    ordering_organization_id: T
                    bond_id: US00206RDA77
                    limit_price: 1000000000
                    quantity: 1000000000
                    status: OPEN
                    timestamp: 1333170042
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/quotes?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
  '/orders/{order_id}':
    parameters:
      - in: path
        name: order_id
        schema:
          type: string
        required: true
        description: ID of the order
        example: ord2000000000000000000000000000000000000555332323136304b41463231
    get:
      description: Returns the order with specified ID
      parameters:
        - $ref: '#/components/parameters/head'
      responses:
        '200':
          description: Success response with requested order
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/OrderModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  order_id: >-
                    odr1000000000000000000000000000000000000555332323136304b41463231
                  action: BUY
                  order: LIMIT
                  ordering_organization_id: T
                  bond_id: US00206RDA77
                  limit_price: 1000000000
                  quantity: 1000000000
                  status: OPEN
                  timestamp: 1333170042
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/orders/quo2000000000000000000000000000000000000555332323136304b41463231?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
  /settlements:
    get:
      description: Returns all settlements
      parameters:
        - $ref: '#/components/parameters/head'
        - $ref: '#/components/parameters/start'
        - $ref: '#/components/parameters/limit'
        - in: query
          name: order_id
          schema:
            type: string
          required: true
          description: ID of the order referenced in the settlement
          example: ord2000000000000000000000000000000000000555332323136304b41463231
      responses:
        '200':
          description: Success response with array of settlements
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/SettlementModel'
                  head:
                    $ref: '#/components/schemas/HeadModel'
                  link:
                    $ref: '#/components/schemas/LinkModel'
              example:
                data:
                  - order_id: >-
                      odr1000000000000000000000000000000000000555332323136304b41463231
                    ordering_organization_id: T
                    quoting_organization_id: COST
                    action: BUY
                    bond_quantity: 10000
                    currency_amount: 1000000000
                head: >-
                  65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
                link: >-
                  https://bond-rest-api/settlements?head=65cd3a3ce088b265b626f704b7f3db97b6f12e848dccb35d7806f3d0324c71b709ed360d602b8b658b94695374717e3bdb4b76f77886953777d5d008558247dd
        '400':
          $ref: '#/components/responses/BadRequestError'
        '500':
          $ref: '#/components/responses/ServerError'
